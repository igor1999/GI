<?php /** @noinspection PhpUnhandledExceptionInspection */ echo '<?php';?>
<?php
use GI\RDB\ORM\Builder\View\Entity\Record\InterfaceView\ViewInterface;
/** @var ViewInterface $this */
?>

<?php $namespace = $this->getORMNamespace(); ?>
namespace <?php echo $namespace, '\\', $this->getTable()->getPhpNames()->getNamespace(); ?>;

use <?php echo $this->getBaseNamespace(); ?>\RecordInterface as BaseInterface;

<?php foreach ($this->getTable()->getParentReferencedTables()->getItems() as $table): ?>
<?php $names = $table->getPhpNames(); ?>
use <?php echo $namespace; ?>\<?php echo $names->getRecordInterface(); ?> as <?php echo $names->getRecordInterfaceAlias(); ?>;
<?php endforeach; ?>
<?php foreach ($this->getTable()->getChildReferencedTables()->getItems() as $table): ?>
<?php $names = $table->getPhpNames(); ?>
use <?php echo $namespace; ?>\<?php echo $names->getSetInterface(); ?> as <?php echo $names->getSetInterfaceAlias(); ?>;
<?php endforeach; ?>

interface RecordInterface extends BaseInterface
{
<?php foreach ($this->getTable()->getColumnList()->getItems() as $column): ?>
<?php echo $this->getColumnSignaturesView()->setColumn($column)->toString(), PHP_EOL; ?>
<?php endforeach;?>

<?php foreach ($this->getTable()->getParentReferencedTables()->getItems() as $table): ?>
<?php echo $this->getRecordSignatureView()->setTable($table)->toString(), PHP_EOL; ?>
<?php endforeach;?>

<?php foreach ($this->getTable()->getChildReferencedTables()->getItems() as $table): ?>
<?php echo $this->getSetSignatureView()->setTable($table)->toString(), PHP_EOL; ?>
<?php endforeach;?>
}