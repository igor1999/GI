<?php /** @noinspection PhpUnhandledExceptionInspection */ echo '<?php';?>
<?php
use GI\RDB\ORM\Builder\View\Entity\Record\ClassView\ViewInterface;
/** @var ViewInterface $this */
?>

namespace <?php echo $this->getORMNamespace(), '\\', $this->getTable()->getNamespace(); ?>;

use <?php echo $this->getBaseNamespace(); ?>\AbstractRecord as Base;

use GI\RDB\Meta\Table\TableInterface;

<?php foreach ($this->getTable()->getParentReferencedTables()->getItems() as $table): ?>
<?php
$namespace = $this->getORMNamespace() . '\\' . $table->getNamespace();
$alias     = $table->getAlias();
?>
use <?php echo $namespace; ?>\Record as <?php echo $alias; ?>Record;
use <?php echo $namespace; ?>\RecordInterface as <?php echo $alias; ?>RecordInterface;
<?php endforeach; ?>
<?php foreach ($this->getTable()->getChildReferencedTables()->getItems() as $table): ?>
<?php
$namespace = $this->getORMNamespace() . '\\' . $table->getNamespace();
$alias     = $table->getAlias();
?>
use <?php echo $namespace; ?>\Set as <?php echo $alias; ?>Set;
use <?php echo $namespace; ?>\SetInterface as <?php echo $alias; ?>SetInterface;
<?php endforeach; ?>

class Record extends Base implements RecordInterface
{
<?php foreach ($this->getTable()->getColumnList()->getItems() as $column): ?>

<?php echo $this->getColumnPropertyView()->setColumn($column)->toString(); ?>

<?php endforeach;?>

<?php foreach ($this->getTable()->getParentReferencedTables()->getItems() as $table): ?>
<?php echo $this->getParentRefPropertyView()->setTable($table)->toString(); ?>

<?php endforeach;?>

<?php foreach ($this->getTable()->getChildReferencedTables()->getItems() as $table): ?>
<?php echo $this->getChildRefPropertyView()->setTable($table)->toString(); ?>

<?php endforeach;?>


    /**
     * @return TableInterface
     * @throws \Exception
     */
    public function getTable()
    {
        return $this->getDriver()->getTableList()->get('<?php echo $this->getTable()->getName(); ?>');
    }

<?php foreach ($this->getTable()->getColumnList()->getItems() as $column): ?>
<?php echo $this->getColumnMethodsView()->setORMNamespace($this->getORMNamespace())->setColumn($column)->toString(); ?>

<?php endforeach;?>

<?php foreach ($this->getTable()->getParentReferencedTables()->getItems() as $table): ?>
<?php echo $this->getParentRefGetterView()->setTable($table)->toString(); ?>

<?php endforeach;?>

<?php foreach ($this->getTable()->getChildReferencedTables()->getItems() as $table): ?>
<?php echo $this->getChildRefGetterView()->setTable($table)->toString(); ?>

<?php endforeach;?>
}